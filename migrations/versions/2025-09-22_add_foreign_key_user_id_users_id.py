"""add foreign key user_id -> users.id

Revision ID: 34004341b2f2
Revises: 5975145d0776
Create Date: 2025-09-22 14:37:24.964771

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '34004341b2f2'
down_revision: Union[str, None] = '5975145d0776'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('text_inserts', sa.Column('text', sa.String(), nullable=False))
    op.add_column('text_inserts', sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False))
    op.create_unique_constraint(None, 'text_inserts', ['user_id'])
    op.drop_constraint(op.f('text_inserts_user_id_fkey'), 'text_inserts', type_='foreignkey')
    op.create_foreign_key(None, 'text_inserts', 'users', ['user_id'], ['id'])
    op.drop_column('text_inserts', 'content')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('text_inserts', sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'text_inserts', type_='foreignkey')
    op.create_foreign_key(op.f('text_inserts_user_id_fkey'), 'text_inserts', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'text_inserts', type_='unique')
    op.drop_column('text_inserts', 'created_at')
    op.drop_column('text_inserts', 'text')
    # ### end Alembic commands ###
